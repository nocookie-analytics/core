name: Build and test

on: [workflow_dispatch, push]

jobs:
  test:
    name: Build and test (Timescale ${{ matrix.use_timescaledb }})
    strategy:
      matrix:
        use_timescaledb: [false, true]
    runs-on: ubuntu-latest
    container: docker/compose

    env:
      DOMAIN: backend
      SMTP_HOST: ""
      TRAEFIK_PUBLIC_NETWORK_IS_EXTERNAL: false
      INSTALL_DEV: true
      COMPOSE_DOCKER_CLI_BUILD: 1
      USE_TIMESCALEDB: ${{ matrix.use_timescaledb }}
      #DOCKER_BUILDKIT: 1
      #BUILDKIT_INLINE_CACHE: 1
      DOCKER_IMAGE_BACKEND: ghcr.io/nocookie-analytics/nca-backend
      DOCKER_IMAGE_FRONTEND: ghcr.io/nocookie-analytics/nca-frontend
      DOCKER_IMAGE_FRONTEND_BUILD_STAGE: ghcr.io/nocookie-analytics/nca-frontend-build-stage

    steps:
    - name: Install git
      run: |
        apk add --no-cache python3 curl

    - uses: actions/checkout@v3

    - name: Setup env file and fetch mmdb
      run: |
        mv .env-ci .env
        echo "TAG=$GITHUB_SHA" | sed 's|/|-|g' >> .env
        echo "BRANCH_TAG=$(echo $GITHUB_REF | sed 's|/|-|g')" >> .env
        sh backend/app/scripts/fetch-db-ip.sh

    - name: Create docker stack
      run: |
        docker-compose \
        -f docker-compose.yml \
        config > docker-stack.yml

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Pull docker cache
      run: |
        export BRANCH_TAG=$(echo "$GITHUB_REF" | sed 's|/|-|g')
        docker-compose pull db proxy &
        docker pull -q $DOCKER_IMAGE_BACKEND:$BRANCH_TAG&
        docker pull -q $DOCKER_IMAGE_FRONTEND:$BRANCH_TAG&
        docker pull -q $DOCKER_IMAGE_BACKEND:refs-heads-master&
        docker pull -q $DOCKER_IMAGE_FRONTEND:refs-heads-master&
        docker pull -q $DOCKER_IMAGE_FRONTEND_BUILD_STAGE:$BRANCH_TAG&
        docker pull -q $DOCKER_IMAGE_FRONTEND_BUILD_STAGE:refs-heads-master&
        wait

    - name: Build docker images
      run: |
        export BRANCH_TAG=$(echo "$GITHUB_REF" | sed 's|/|-|g')
        docker build backend/ --progress=plain -t $DOCKER_IMAGE_BACKEND:$GITHUB_SHA --cache-from $DOCKER_IMAGE_BACKEND:$BRANCH_TAG --cache-from $DOCKER_IMAGE_BACKEND:refs-heads-master --build-arg INSTALL_DEV=true &
        docker build frontend/ --progress=plain --target build-stage -t $DOCKER_IMAGE_FRONTEND_BUILD_STAGE:$GITHUB_SHA --cache-from $DOCKER_IMAGE_FRONTEND_BUILD_STAGE:$BRANCH_TAG --cache-from $DOCKER_IMAGE_FRONTEND_BUILD_STAGE:refs-heads-master --build-arg INSTALL_DEV=true && \
        docker build frontend/ --progress=plain -t $DOCKER_IMAGE_FRONTEND:$GITHUB_SHA --cache-from $DOCKER_IMAGE_FRONTEND_BUILD_STAGE:$GITHUB_SHA --cache-from $DOCKER_IMAGE_FRONTEND:$BRANCH_TAG --cache-from $DOCKER_IMAGE_FRONTEND:refs-heads-master --build-arg INSTALL_DEV=true &
        wait

    - name: Push docker
      run: |
        docker image ls
        export BRANCH_TAG=$(echo "$GITHUB_REF" | sed 's|/|-|g')
        docker tag $DOCKER_IMAGE_BACKEND:$GITHUB_SHA $DOCKER_IMAGE_BACKEND:$BRANCH_TAG
        docker tag $DOCKER_IMAGE_FRONTEND:$GITHUB_SHA $DOCKER_IMAGE_FRONTEND:$BRANCH_TAG
        docker tag $DOCKER_IMAGE_FRONTEND_BUILD_STAGE:$GITHUB_SHA $DOCKER_IMAGE_FRONTEND_BUILD_STAGE:$BRANCH_TAG

        docker push $DOCKER_IMAGE_BACKEND:$BRANCH_TAG&
        docker push $DOCKER_IMAGE_FRONTEND:$BRANCH_TAG&
        docker push $DOCKER_IMAGE_FRONTEND_BUILD_STAGE:$BRANCH_TAG&

        docker push $DOCKER_IMAGE_BACKEND:$GITHUB_SHA&
        docker push $DOCKER_IMAGE_FRONTEND:$GITHUB_SHA&
        docker push $DOCKER_IMAGE_FRONTEND_BUILD_STAGE:$GITHUB_SHA&
        wait

    - name: Start docker
      run: |
        docker-compose -f docker-stack.yml up -d

    - name: Run tests
      run: |
        docker-compose -f docker-stack.yml exec -T backend bash /app/tests-start.sh --cov=app --vcr-record=none "$@"

    - name: Log docker status
      if: ${{ always() }}
      run: |
        docker-compose logs -t
