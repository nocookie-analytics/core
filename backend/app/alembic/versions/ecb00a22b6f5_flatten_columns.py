"""flatten columns

Revision ID: ecb00a22b6f5
Revises: c1a9d32b3fe8
Create Date: 2020-12-12 16:11:08.480720

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ecb00a22b6f5'
down_revision = 'c1a9d32b3fe8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('event', sa.Column('browser_family', sa.String(), nullable=True))
    op.add_column('event', sa.Column('browser_version_major', sa.String(), nullable=True))
    op.add_column('event', sa.Column('browser_version_minor', sa.String(), nullable=True))
    op.add_column('event', sa.Column('device_brand', sa.String(), nullable=True))
    op.add_column('event', sa.Column('device_family', sa.String(), nullable=True))
    op.add_column('event', sa.Column('device_model', sa.String(), nullable=True))
    op.add_column('event', sa.Column('is_bot', sa.Boolean(), nullable=True))
    op.add_column('event', sa.Column('is_mobile', sa.Boolean(), nullable=True))
    op.add_column('event', sa.Column('is_pc', sa.Boolean(), nullable=True))
    op.add_column('event', sa.Column('is_tablet', sa.Boolean(), nullable=True))
    op.add_column('event', sa.Column('is_touch_capable', sa.Boolean(), nullable=True))
    op.add_column('event', sa.Column('metric_name', sa.String(), nullable=True))
    op.add_column('event', sa.Column('metric_value', sa.Integer(), nullable=True))
    op.add_column('event', sa.Column('os_family', sa.String(), nullable=True))
    op.add_column('event', sa.Column('os_version_major', sa.String(), nullable=True))
    op.add_column('event', sa.Column('os_version_minor', sa.String(), nullable=True))
    op.create_index(op.f('ix_event_browser_family'), 'event', ['browser_family'], unique=False)
    op.create_index(op.f('ix_event_device_brand'), 'event', ['device_brand'], unique=False)
    op.create_index(op.f('ix_event_device_family'), 'event', ['device_family'], unique=False)
    op.create_index(op.f('ix_event_device_model'), 'event', ['device_model'], unique=False)
    op.create_index(op.f('ix_event_metric_name'), 'event', ['metric_name'], unique=False)
    op.create_index(op.f('ix_event_os_family'), 'event', ['os_family'], unique=False)
    op.create_index(op.f('ix_event_url_params'), 'event', ['url_params'], unique=False)
    op.drop_column('event', 'metric')
    op.drop_column('event', 'parsed_ua')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('event', sa.Column('parsed_ua', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('event', sa.Column('metric', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_event_url_params'), table_name='event')
    op.drop_index(op.f('ix_event_os_family'), table_name='event')
    op.drop_index(op.f('ix_event_metric_name'), table_name='event')
    op.drop_index(op.f('ix_event_device_model'), table_name='event')
    op.drop_index(op.f('ix_event_device_family'), table_name='event')
    op.drop_index(op.f('ix_event_device_brand'), table_name='event')
    op.drop_index(op.f('ix_event_browser_family'), table_name='event')
    op.drop_column('event', 'os_version_minor')
    op.drop_column('event', 'os_version_major')
    op.drop_column('event', 'os_family')
    op.drop_column('event', 'metric_value')
    op.drop_column('event', 'metric_name')
    op.drop_column('event', 'is_touch_capable')
    op.drop_column('event', 'is_tablet')
    op.drop_column('event', 'is_pc')
    op.drop_column('event', 'is_mobile')
    op.drop_column('event', 'is_bot')
    op.drop_column('event', 'device_model')
    op.drop_column('event', 'device_family')
    op.drop_column('event', 'device_brand')
    op.drop_column('event', 'browser_version_minor')
    op.drop_column('event', 'browser_version_major')
    op.drop_column('event', 'browser_family')
    # ### end Alembic commands ###
